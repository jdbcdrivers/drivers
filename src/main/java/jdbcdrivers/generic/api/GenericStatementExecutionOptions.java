package jdbcdrivers.generic.api;

import java.util.Objects;

/**
 * Options passed when executing SQL statements.
 */
public final class GenericStatementExecutionOptions {

    public enum AutoGeneratedKeys {

        RETURN_GENERATED_KEYS,
        NO_GENERATED_KEYS;
    }

    public enum ResultSetType {

        FORWARD_ONLY,
        SCROLL_INSENSITIVE,
        SCROLL_SENSITIVE;
    }

    public enum Concurrency {

        READ_ONLY,
        UPDATABLE;
    }

    public enum Holdability {

        HOLD_CURSORS_OVER_COMMIT,
        CLOSE_CURSORS_AT_COMMIT;
    }

    private final AutoGeneratedKeys autoGeneratedKeys;
    private final ResultSetType type;
    private final Concurrency concurrency;
    private final Holdability holdability;

    public GenericStatementExecutionOptions(AutoGeneratedKeys autoGeneratedKeys, ResultSetType type, Concurrency concurrency) {

        this.autoGeneratedKeys = Objects.requireNonNull(autoGeneratedKeys);
        this.type = Objects.requireNonNull(type);
        this.concurrency = Objects.requireNonNull(concurrency);
        this.holdability = null;
    }

    public GenericStatementExecutionOptions(AutoGeneratedKeys autoGeneratedKeys, ResultSetType type, Concurrency concurrency, Holdability holdability) {

        this.autoGeneratedKeys = Objects.requireNonNull(autoGeneratedKeys);
        this.type = Objects.requireNonNull(type);
        this.concurrency = Objects.requireNonNull(concurrency);
        this.holdability = Objects.requireNonNull(holdability);
    }

    public AutoGeneratedKeys getAutoGeneratedKeys() {
        return autoGeneratedKeys;
    }

    public ResultSetType getType() {
        return type;
    }

    public Concurrency getConcurrency() {
        return concurrency;
    }

    public Holdability getHoldability() {
        return holdability;
    }
}
